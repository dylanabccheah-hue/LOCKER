<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Locker Agreement Form</title>
<style>
  body { font-family: 'Segoe UI', sans-serif; padding: 20px; background: #f9f9f9; }
  .form-box { background: white; padding: 20px; border-radius: 12px; max-width: 800px; margin: auto; }
  h2, h3 { text-align: center; }
  canvas { border: 1px solid #ccc; border-radius: 4px; }
  button { margin-top: 10px; padding: 8px 16px; }
</style>
</head>
<body>
<div class="form-box">
  <h2>锺灵中学学生储物柜租用规则</h2>
  <p>本校储物柜提供学生在课余时间收放简便物件之用。</p>
  <p>本校对因使用储物柜所造成的损失，不承担任何责任。</p>
  <p>学生不可以收放任何贵重的物品于储物柜内。</p>
  <p>学生不可以存放任何违禁物件 (包括手机)。</p>
  <p>学生只能在上课前，休息时间和放学后使用储物柜，违规者将被记一个小过。</p>
  <p>物件存放好后，切记随身携带储物柜的钥匙。</p>
  <p>学生必须自备储物柜的锁头及钥匙，学校不承担任何责任。</p>
  <p>学校可以随时展开行动，突击检查储物柜，学生不能拒绝接受检查。</p>
  <p>a. 初中二、初中三、高中一和高中二的租用储物柜者必须在归还课本后清理该储物柜，不遗留任何物件。</p>
  <p>b. 高中三的租用储物柜者必须在毕业典礼前一个星期清理该储物柜，不遗留任何物件。</p>
  <p>租用储物柜者必须签署租用合约及遵守使用规则。</p>
  <p>租用储物柜者，必须在签约时一次过缴清租金。</p>
  <p>储物柜若有损坏，学生须付修理损坏之费用。</p>
  <p>租期未满者，半途欲终止租约者，租金一律不退还。</p>
  <p>学校有权在任何时候增添租用条规。</p>

  <h3>学生信息</h3>
  <p>学生姓名(中): <span id="name_cn"></span></p>
  <p>学生姓名(英): <span id="name_en"></span></p>
  <p>学号: <span id="school_no"></span></p>
  <p>班级: <span id="class"></span></p>
  <p>租金: RM <span id="rent"></span></p>
  <p>储物柜号码: <span id="locker_number"></span></p>

  <h3>学生签名</h3>
  <canvas id="signature-pad" width="500" height="200"></canvas><br>
  <button id="clear">清除签名</button>
  <button id="save">提交签名</button>
</div>

<script>
  // Load student data (passed via localStorage)
  const student = JSON.parse(localStorage.getItem("currentAgreementStudent"));
  if (student) {
    document.getElementById("name_cn").textContent = student.name_cn;
    document.getElementById("name_en").textContent = student.name_en;
    document.getElementById("school_no").textContent = student.school_no;
    document.getElementById("class").textContent = student.class;
    document.getElementById("rent").textContent = student.rent || "";
    document.getElementById("locker_number").textContent = student.locker_number;
  }

  // Signature Pad Logic
  const canvas = document.getElementById('signature-pad');
  const ctx = canvas.getContext('2d');
  let drawing = false;

  canvas.addEventListener('mousedown', () => drawing = true);
  canvas.addEventListener('mouseup', () => drawing = false);
  canvas.addEventListener('mousemove', draw);
  
  canvas.addEventListener('touchstart', e => { drawing = true; e.preventDefault(); });
  canvas.addEventListener('touchend', e => { drawing = false; e.preventDefault(); });
  canvas.addEventListener('touchmove', e => {
    const touch = e.touches[0];
    drawTouch(touch);
    e.preventDefault();
  });

  function draw(e) {
    if (!drawing) return;
    ctx.lineWidth = 2;
    ctx.lineCap = "round";
    ctx.strokeStyle = "#000";
    ctx.lineTo(e.offsetX, e.offsetY);
    ctx.stroke();
    ctx.beginPath();
    ctx.moveTo(e.offsetX, e.offsetY);
  }

  function drawTouch(touch) {
    const rect = canvas.getBoundingClientRect();
    ctx.lineWidth = 2;
    ctx.lineCap = "round";
    ctx.strokeStyle = "#000";
    ctx.lineTo(touch.clientX - rect.left, touch.clientY - rect.top);
    ctx.stroke();
    ctx.beginPath();
    ctx.moveTo(touch.clientX - rect.left, touch.clientY - rect.top);
  }

  document.getElementById('clear').addEventListener('click', () => {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
  });

  document.getElementById('save').addEventListener('click', () => {
    const signatureData = canvas.toDataURL();
    student.signature = signatureData;

    let registered = JSON.parse(localStorage.getItem("lockerRegistrations")) || [];
    registered.push(student);
    localStorage.setItem("lockerRegistrations", JSON.stringify(registered));

    alert("Signature saved and registration completed!");
    window.close(); // if opened in a new tab
  });
</script>
</body>
</html>
